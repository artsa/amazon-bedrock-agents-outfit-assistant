name: Deploy the solution

on:
    push:
      branches:
        - development
        - main
        - master
      tags:
        - "v*"

jobs:
  set-environment:
    runs-on: ubuntu-latest

    outputs:
      env: ${{ steps.selectEnvironment.outputs.env }}
      account_id: ${{ steps.selectEnvironment.outputs.account_id }}
      region: ${{ steps.selectEnvironment.outputs.region }}

    steps:
        - name: Determine environment
          id: selectEnvironment
          run: |
            # Set the environment based on the branch or tag
            if [[ "${{ github.ref }}" == "refs/heads/development" ]]; then
                # Commit has been made to the development branch
                echo "env=dev" >> $GITHUB_OUTPUT
                echo "account_id=${{ vars.DEV_AWS_ACCOUNT_ID }}" >> $GITHUB_OUTPUT
                echo "region=${{ vars.DEV_AWS_REGION }}" >> $GITHUB_OUTPUT
            elif [[ "${{ github.ref }}" == "refs/heads/main" || "${{ github.ref }}" =~ ^refs/tags/v.*-prod ]]; then
                # Commit has been made to the main branch or a production version tag has been created
                echo "env=prod" >> $GITHUB_OUTPUT
                echo "account_id=${{ vars.PROD_AWS_ACCOUNT_ID }}" >> $GITHUB_OUTPUT
                echo "region=${{ vars.PROD_AWS_REGION }}" >> $GITHUB_OUTPUT
            elif [[ "${{ github.ref }}" =~ ^refs/tags/v.*-test ]]; then
                # A test version tag has been created
                echo "env=test" >> $GITHUB_OUTPUT
                echo "account_id=${{ vars.TEST_AWS_ACCOUNT_ID }}" >> $GITHUB_OUTPUT
                echo "region=${{ vars.TEST_AWS_REGION }}" >> $GITHUB_OUTPUT
            else
                # Unknown environment
                exit 1
            fi

        - uses: actions/checkout@v4
        - uses: actions/setup-python@v5
        - uses: aws-actions/setup-sam@v2

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ steps.selectEnvironment.outputs.region }}


        - run: sam build --use-container
        - run: sam deploy --no-confirm-changeset --no-fail-on-empty-changeset --no-progressbar --stack-name AWS-outfit-assistant
